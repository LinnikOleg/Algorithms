########################################################################################################################################################
                                        INTRO

Линейный поиск  - последовательный 1_34_86_34_4_14_62_63_4 (один за одним, перебором)
Двоичный (бинарный) поиск - классический алгоритм поиска элемента в отсортированном массиве, использующий дробление массива на половины

* В неупорядоченных массивах вставка выполняется - быстрее, а поиск и удаление — медленнее.
* В упорядоченных массивах может применяться двоичный поиск.
* Линейный поиск выполняется за время, пропорциональное количеству элементов в массиве. O(N)
* Двоичный поиск выполняется за время, пропорциональное логарифму количества элементов. O(log N)

########################################################################################################################################################
                                        ЛОГАРИФМ

|------------------------------------------------------|
| Количество необходимых сравнений при двоичном поиске |
|------------------------------------------------------|
| Диапазон        Необходимо сравнений                 |
| 10                4                                  |
| 100               7                                  |
| 1000              10                                 |
| 10000             14                                 |
| 100000            17                                 |
| 1000000           20                                 |
| 10000000          24                                 |
| 100000000         27                                 |
| 1000000000        30                                 |
|------------------------------------------------------|

Операция, обратная возведению в степень, называется логарифмом. Вот как выглядит нужная формула с логарифмом:
             s = log2(r).
Обычно логарифм вычисляет по основанию 10, но результат легко преобразуется к основанию
   2 — достаточно умножить его на 3,322.
     Например, log10(100) = 2; следовательно,

         log2(100) =     log10(100) =     2    × 3,322,   или 6,644.  При округлении вверх до целого числа 7 мы получаем значение в столбце справа от 100
         log2(1000) =    log10(1000) =    3    × 3,322    или 10
         log2(10000) =   log10(10000) =   4    × 3,322    или 14


########################################################################################################################################################
                                                O-синтаксис
O-синтаксис не дает конкретных цифр, а передает общий характер зависимости времени выполнения от количества элементов.
Это самый информативный механизм сравнения алгоритмов

                |------------------------------------------------------------------------|
                |    O(1) — отлично, O(log N) — хорошо, O(N) - неплохо, O(N^2) — плохо.  |
                |------------------------------------------------------------------------|

В «O-синтаксисе» используется прописная буква «O»; считайте, что он обозначает «порядок» (Order of).

|--------------------------------------------------------------------|
| Время выполнения операций в O-синтаксисе                           |
|--------------------------------------------------------------------|
| Алгоритм                           Время выполнения в O-синтаксисе |
|--------------------------------------------------------------------|
| Линейный                                 поиск O(N)                |
| Двоичный                                 поиск O(log N)            |
| Вставка в неупорядоченном массиве        O(1)                      |
| Вставка в упорядоченном массиве          O(N)                      |
| Удаление в неупорядоченном массиве       O(N)                      |
| Удаление в упорядоченном массиве         O(N)                      |
|--------------------------------------------------------------------|





