<persistence xmlns="http://xmlns.jcp.org/xml/ns/persistence" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
			 xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence
	http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd" version="2.1">

	<persistence-unit name="infinite-finances">

		<mapping-file>META-INF/mapping.xml</mapping-file>

		<shared-cache-mode>ENABLE_SELECTIVE</shared-cache-mode>

		<properties>
			<property name="javax.persistence.jdbc.user" value="sa"/>
			<property name="javax.persistence.jdbc.password" value=""/>
			<property name="javax.persistence.jdbc.url" value="jdbc:h2:~/test"/>
			<property name="javax.persistence.jdbc.driver" value="org.h2.Driver"/>

			<property name="hibernate.dialect" value="org.hibernate.dialect.H2Dialect"/>
			<property name="hibernate.show_sql" value="true"/>
			<property name="hibernate.hbm2ddl.auto" value="create"/>
			<!-- create, update, validate, create-drop -->

			<!--Second level cache-->
			<property name="hibernate.cache.region.factory_class" value="org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory"/>

			<!--<property name="hibernate.cache.provider_class" value="org.hibernate.cache.SingletonEhCacheProvider"/>-->
			<!--<property name="hibernate.cache.use_second_level_cache" value="true"/>-->
			<!--<property name="hibernate.cache.use_query_cache" value="true"/>-->

			<!--Не нужно объявлять маппинг, JPA сама это сделает-->
			<!--JPA пройдет по всем объектам, посмотрит у кого есть @Entity-->
		</properties>
	</persistence-unit>
</persistence>
